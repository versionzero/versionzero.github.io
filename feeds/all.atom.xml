<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>versionzero</title><link href="http://versionzero.org/" rel="alternate"></link><link href="http://versionzero.org/feeds/all.atom.xml" rel="self"></link><id>http://versionzero.org/</id><updated>2016-05-16T05:00:00-06:00</updated><entry><title>Drive</title><link href="http://versionzero.org/blog/2016/05/16/drive/index.html" rel="alternate"></link><published>2016-05-16T05:00:00-06:00</published><author><name>Ben Burnett</name></author><id>tag:versionzero.org,2016-05-16:blog/2016/05/16/drive/index.html</id><summary type="html">&lt;p&gt;He found himself driving across the prairies&amp;mdash;the road stretching
as far as the eye could see, undulating as the small rises and dips
smoothly rocked the car. He had drifted off, for who knows how
long&amp;mdash;certainly not him. He was driving south and in the far
distance, after where the road disappeared, the mountains rose like
waves in a far off storm terrorizing the deep ocean, where no one
visited.&lt;/p&gt;
&lt;p&gt;The mountains looked like the buildings of his downtown, but with
softer edges, where more snow gathered than could be expected of a
high-rise.&lt;/p&gt;
&lt;p&gt;He was glad to be away from the city; the noise of life there had
always buzzed in his head like an insect stuck in the vent of a car
heater. He has often wished it would die down, that he would get used
to it; but, instead, it continued unabated: pestering his every moment
awake&amp;mdash;and when he was unlucky, his sleep. He was glad to be
away, but the foreign sight of the mountains in the distance made him
uneasy.&lt;/p&gt;
&lt;p&gt;The rise of the mountains seemed at odds with the flat demenour of the
ground beneith him; the sudden rise evoked a sense of vertico equaled
by his downward high-rise view. The sight made him
uncomfortable, yet still, he drove on.&lt;/p&gt;
&lt;p&gt;A town crept slowly in to view; it too was as forein as the mountain
ranges that dwarfted it further.&lt;/p&gt;
&lt;p&gt;The lull of the road had made him tired. He pulled over at the nearest
gas station and purchased a coffee. After returning to the car he
continued on, unsure of what he would do next, except drive towards
the rocky pillars that lay ahead, beyond the end of the road.&lt;/p&gt;</summary><category term="Fiction"></category><category term="Short Stories"></category></entry><entry><title>In Time</title><link href="http://versionzero.org/blog/2016/04/15/in-time-2/index.html" rel="alternate"></link><published>2016-04-15T05:00:00-06:00</published><author><name>Ben Burnett</name></author><id>tag:versionzero.org,2016-04-15:blog/2016/04/15/in-time-2/index.html</id><summary type="html">&lt;p&gt;The problem with time travel is that it takes time.&lt;/p&gt;
&lt;p&gt;It takes time to go back and kill Hitler. You have to plan these
things, it's not like you can just hop in the machine and go back and
kill Hitler. You have to know how you are going to do it. You have to
know when and where he is going to be. Those are, of course, a matter
of history, but still, it's not like you can just show up at Nuremberg
and be like, hey, I'm going to kill Hitler. No. It just not going to
happen that way.&lt;/p&gt;
&lt;p&gt;That's the problem with time travel. It takes time. Time I don't have.&lt;/p&gt;
&lt;p&gt;I bought my time machine a while ago. I couldn't afford the best
model, but it's not the worst either. It was on sale at Walmart, and a
buddy helped me get it home. I'd had it in the dining room for a few
days, since I hadn't gotten around to getting a dining room table. But
after a few days of languishing in the space, I decided it would be
better to have it stashed in the spare room. God knows why I have a
spare room&amp;mdash;I'm single and I have few visitors.&lt;/p&gt;
&lt;p&gt;People used their time machines for all sorts of things. My neighbor
took his kids to the hight of the Roman empire to watch a match
between some gladiator and another. I don't remember the details. But
his son got lost. By lost, I mean he was taken and killed. His wife
was also raped. Not that his son was raped, but that in addition to
his son being killed, his wife was rapped. I don't think it was the
holiday they expected. But what can you expect from a place like that?
It's certainly not Disney Land. Not that Disney Land is Disney Land
anymore, it closed after time machines became available, since
everyone starting finding their magic elsewhere. Well, not everyone
found magic. My neighbor certainly didn't.&lt;/p&gt;
&lt;p&gt;So why did I buy a time machine if I didn't take trips like my
neighbor? I don't know. Why do we buy anything ridiculous? Maybe to
show off to the neighbors. Not that mine would be that impressed
anymore. Maybe we do it to fill a void. Maybe we do it to invest back
in to our economy. Maybe we just do it because we like cool shit that
lets us dream a little. Isn't that why people buy lottery tickets?
They can't seriously think they are going to win, can they? What it
does do for them is give them the right to imagine what they would do
if they won.&lt;/p&gt;
&lt;p&gt;Now that I've mentioned lottery tickets, you're probably thinking:
well, why couldn't you just go back and buy a winning lottery ticket?
Well, you can't. OK, I guess you could go back and get the ticket with
the winning numbers, but you can't come back and expect it to win. You
could the fist time. And someone did. That's why you can't do it
anymore. The lottery people caught on. Not that there was much to
catch on to, I mean, it's a bloody time machine, who wouldn't have
thought to go back and get the winning ticket, it's an obvious thing
to do. But the lottery has changed. There is only ever one winner,
aside from the lottery people who rake it in, it's the person who
makes the first claim. And trust me, it's never going to be
you. People have armies of travelers poised to find the right
timing. They go get the ticket and try to arrive back so that they are
just in time to claim it. Problem is, is that because there are so
many people doing it, they all appear at the same place at the same
time. It's not pretty. Not pretty at all. I saw it once when I was a
kid, one second there was a man in line, just waiting to claim his
winnings, when suddenly, POP!, a woman appeared right in him. There
where three more pops in quick succession, and what remained looked
like a Medusa figure with multiple heads. It was sick.&lt;/p&gt;
&lt;p&gt;No. I don't do any of those things with my time machine. The things I
do with mine are far less interesting. I use my time machine to do the
laundry. It works like this: I forget to do the laundry, as usual, but
rather than staying up all night waiting for the old machines, I just
hop in my machine, go back a few hours and put it on. By the time I'm
back, it's done. Takes no time at all.&lt;/p&gt;</summary><category term="Fiction"></category><category term="Short Stories"></category><category term="Science Fiction"></category></entry><entry><title>Living Alone</title><link href="http://versionzero.org/blog/2016/04/10/living-alone/index.html" rel="alternate"></link><published>2016-04-10T07:00:00-06:00</published><author><name>Ben Burnett</name></author><id>tag:versionzero.org,2016-04-10:blog/2016/04/10/living-alone/index.html</id><summary type="html">&lt;p&gt;The world started without him. It continued well after, as well.&lt;/p&gt;
&lt;p&gt;He was born in a small rural Alberta town, just south of nowhere and
north of nothing important. His life was full of disappointment,
heart-break, and loved ones lost. Yet still, he enjoyed the days.&lt;/p&gt;
&lt;p&gt;In particular, he enjoyed the breeze the would swoop down from the
mountains in the West, curl around his house like a cat circling it's
rest. The wind would crep in to every nook and cranny in the place,
laying silt on every surface available for rest.&lt;/p&gt;
&lt;p&gt;He enjoyed the creak of the old wood and the whistle that came from
the tin roof that had long since become loose from the constant gusts
across the prairies.&lt;/p&gt;
&lt;p&gt;On most nights, the sound soothed him off to sleep. But not this
evening.&lt;/p&gt;
&lt;p&gt;He had been awake since 6 am, just before the sun had broken. But even
in the lateness of evening, he could not find a nod. His mind was
wandering, fixating upon the things that had gone wrong in his life.&lt;/p&gt;
&lt;p&gt;He had not been a social man. He had picked the house and the land he
inhabited to escape the city he had once visited for 10 years in his
youth. But the move had not always worked the trick he had hoped. His
mind still returned there, not letting him escape the tendrils
that had wound around his past, urban life.&lt;/p&gt;
&lt;p&gt;He thought of the man for whom the department store's doors had caught
his coat as he, the stranger, had been exiting with gifts piled high
for his children. He recalled the urge to help, the sense that it
would be polite, and even kind, to reach out and pull the door open so
as to release the man's coat from it's clutches. He also recalled how
he had simply moved on, not fulfilling his imagined nicety.&lt;/p&gt;
&lt;p&gt;This moment in his past had become a fixture in his frequent visits to
the past. He had no good reason to think this made him a bad person,
one lacking in a certain type of character. Yet still, it came back,
over and over again&amp;mdash;revisiting his guilt upon him.&lt;/p&gt;
&lt;p&gt;Things like this occupied his mind a lot, and usually for no particular
reason, either.&lt;/p&gt;
&lt;p&gt;He had had a good day that day. He had cleaned the kitchen for the 3rd
time that month, and scrubbed the bathroom to a shimmer for the 8th. He
liked the order, but lacked the discipline to leave good enough alone.&lt;/p&gt;
&lt;p&gt;This was they way for him, the visits to the past came at least once a
week, but this evening was, in particular, unsatisfactorily
unpleasant.&lt;/p&gt;
&lt;p&gt;He rose out of bed and made his way to the kitchen for a glass of
milk, hoping that it might help calm his mind. Over the course of the
short walk from the bed to the fringe, he quietly committed himself to
returning to the city.&lt;/p&gt;
&lt;p&gt;He hoped that his time in the house, in the wind, with it's creeks,
and it's groans, dropped in the prairies, just east of the mountains,
would not return to him during a sleepless night in the city.&lt;/p&gt;</summary><category term="Fiction"></category><category term="Short Stories"></category></entry><entry><title>Run Windows commands from the Windows Subsystem for Linux</title><link href="http://versionzero.org/blog/2016/04/09/run-windows-cmds-in-wsl/index.html" rel="alternate"></link><published>2016-04-09T12:00:00-06:00</published><author><name>Ben Burnett</name></author><id>tag:versionzero.org,2016-04-09:blog/2016/04/09/run-windows-cmds-in-wsl/index.html</id><summary type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;A while back, &lt;a href="http://www.microsoft.com/"&gt;Microsoft&lt;/a&gt; announced a
partnership with &lt;a href="http://www.canonical.com"&gt;Canonical&lt;/a&gt; that would
bring native &lt;a href="https://blogs.windows.com/windowsexperience/2016/04/06/announcing-windows-10-insider-preview-build-14316/"&gt;support for
Linux&lt;/a&gt;
to the Windows echo-system.&lt;/p&gt;
&lt;p&gt;The partnership includes creating an addition to Windows 10, through a
new subsystem called Windows Subsystem for Linux, that allows Windows
to run and use a subset of an Ubuntu distribution. A working version
of this system&amp;mdash;still in beta&amp;mdash;was release on April 6th 2016
and is available through the &lt;a href="https://blogs.windows.com/windowsexperience/2016/04/06/announcing-windows-10-insider-preview-build-14316/"&gt;Windows Insider
Program&lt;/a&gt;. You
can also watch the project activity on the &lt;a href="https://blogs.msdn.microsoft.com/commandline/"&gt;Windows Command Line Tools
For Developers&lt;/a&gt; blog.&lt;/p&gt;
&lt;p&gt;One of the problems with the Windows Subsystem for Linux (herein WSL)
is that it &lt;em&gt;only&lt;/em&gt; supports running Linux tasks. According to
Microsoft, "&lt;a href="https://blogs.windows.com/buildingapps/2016/03/30/run-bash-on-ubuntu-on-windows/"&gt;you cannot interact with Windows applications and
tools.&lt;/a&gt;"
That is to say, if you launch &lt;code&gt;bash&lt;/code&gt;, you cannot run, say,
&lt;code&gt;notepad.exe&lt;/code&gt; from &lt;em&gt;within&lt;/em&gt; &lt;code&gt;bash&lt;/code&gt;. This means that Windows system
tasks cannot be automated. This is unfortunate, since using the
assortment of Linux tools perform some of these tasks would be ideal.&lt;/p&gt;
&lt;p&gt;Systems like &lt;a href="https://cygwin.com"&gt;Cygwin&lt;/a&gt; (or more interestingly,
&lt;a href="http://babun.github.io"&gt;Babun&lt;/a&gt;) can inter-operate with Windows
application. However, this is due to the way the systems were
implemented. Cygwin, for instance, is a collection of Unix tool that
have been ported and compiled to run on Windows. This is stark
contrast to how WSL operates, which actually runs native Linux
applications.&lt;/p&gt;
&lt;p&gt;The purposes of this post is to demonstrate that it is possible to
escape the Linux sand-box and run native Windows applications.&lt;/p&gt;
&lt;h2&gt;The Approach&lt;/h2&gt;
&lt;p&gt;The way in which WSL works does not allow us to escape the Linux
sand-box directly. To do this we will require a set of tools
specifically crafted for this task.&lt;/p&gt;
&lt;p&gt;A simple tool, available
&lt;a href="https://github.com/versionzero/winrun"&gt;here&lt;/a&gt;, allows Linux
applications to interact with Windows. It operates by monitoring the
Windows filesystem for changes. If a new file is detected, it is read
and the command it contains is run.&lt;/p&gt;
&lt;p&gt;Consider the case of &lt;code&gt;notepad.exe&lt;/code&gt;. If we would like to launch it, we
need only create a new file, containing the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C:/Windows/notepad.exe
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that we use &lt;code&gt;/&lt;/code&gt; slashes. This is to avoid having to deal with
double escaping the path, using &lt;code&gt;\\\\&lt;/code&gt; as a delimiter.&lt;/p&gt;
&lt;p&gt;Our utility will notice the creation of a new file and starts the
process churning.&lt;/p&gt;
&lt;p&gt;Communicating the application name to the WSL is now simply a matter
of creating a new text file with the command we care to run. There are
many ways to do this in Linux, but a simple one takes the following
form:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:/Windows/notepad.exe&amp;quot;&lt;/span&gt; &amp;gt; /mnt/c/winrun/run
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Where &lt;code&gt;run&lt;/code&gt; is an arbitrary name of a text file, and &lt;code&gt;/mnt/c/winrun&lt;/code&gt;
is a directory that can be read and written to by both Windows and
Linux.&lt;/p&gt;
&lt;p&gt;Note that the current implementation of the monitoring tool will not
delete the &lt;code&gt;run&lt;/code&gt; file, so we need to clean it up ourselves.&lt;/p&gt;
&lt;p&gt;If you have any questions or comments for me, please leave them bellow.&lt;/p&gt;</summary><category term="Windows"></category><category term="Linux"></category></entry><entry><title>Elasticsearch Queries</title><link href="http://versionzero.org/blog/2016/04/05/els/index.html" rel="alternate"></link><published>2016-04-05T20:00:00-06:00</published><author><name>Ben Burnett</name></author><id>tag:versionzero.org,2016-04-05:blog/2016/04/05/els/index.html</id><summary type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I've been working with
&lt;a href="https://www.elastic.co/products/elasticsearch"&gt;Elasticsearch&lt;/a&gt;
recently at work, and I'm impressed with it. My only issue with it is
the query and filter syntax. I find the syntax to be hard to read and
worse to write. I must have spent more time wondering why the results
of a query are empty than I have spent writing the queries to begin
with. I needed something to change this.&lt;/p&gt;
&lt;p&gt;I first considered having someone else write them, but I ruled that
out after carefully considering my job security.  The solution I
settled on was to create a language with a simple syntax that retained
the expressiveness of a subset of the &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html"&gt;ELS query
DSL&lt;/a&gt;
that I was finding problematic.&lt;/p&gt;
&lt;p&gt;I should mention that we also use &lt;a href="https://www.python.org"&gt;Python&lt;/a&gt; as
our primary language in the office, so I'll be using it to illustrate
the ideas. Of course, the solution can be expressed in many other
languages and in many other forms. So don't feel that this needs to be
a Python only solution.&lt;/p&gt;
&lt;h2&gt;The Data&lt;/h2&gt;
&lt;p&gt;For the purposes of our queries, we'll be using a simple bank account
data set. Typical entries are of the form:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;account&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;balance&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16623&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;firstname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Iris&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;lastname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Mckenzie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;age&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;account&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;balance&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3450&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;firstname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Bradshaw&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;lastname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Rupertson&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;age&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Our data has five entries: one for &lt;code&gt;account&lt;/code&gt;, &lt;code&gt;balance&lt;/code&gt;, &lt;code&gt;firstname&lt;/code&gt;,
&lt;code&gt;lastname&lt;/code&gt;, and &lt;code&gt;age&lt;/code&gt;. While it's too simplistic for real-world use,
it'll be sufficient for our purposes.&lt;/p&gt;
&lt;h2&gt;The Language&lt;/h2&gt;
&lt;p&gt;Consider the following expression:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;balance&amp;#39; &amp;gt; 1200
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The intent of the expression is to filter out all the bank accounts
such that only the ones with a &lt;code&gt;balance&lt;/code&gt; entry greater than $1200 are
returned. Let's look at it's equivalent ELS query DSL version:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;range&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;balance&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;gt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The ELS query is not much more complex in this case, but it requires
that we aleast do more typing. If we make the expression more complex,
the problem I faced starts to emerge.&lt;/p&gt;
&lt;p&gt;Consider the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;balance&amp;#39; &amp;gt; 3500 and &amp;#39;age&amp;#39; &amp;gt; 20
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This expression is equivalent to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;bool&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;filter&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;and&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;quot;range&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;balance&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;quot;gt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3500&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;quot;range&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;age&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;quot;gt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice I said equivalent to, rather than this is the &lt;em&gt;best&lt;/em&gt; was to
write the equivalent query in terms of the ELS query DSL. The ELS
query doesn't need to be so verbose; the query &lt;em&gt;can&lt;/em&gt; be written in
more compact form. But the point here is not to show how much typing
is required, rather it is to impress how complex queries &lt;em&gt;can&lt;/em&gt; become.&lt;/p&gt;
&lt;p&gt;It should be clear that expressions are at least easier to write, read
and, in my opinion, reason about, than there ELS query equivalent.&lt;/p&gt;
&lt;h2&gt;The Source&lt;/h2&gt;
&lt;p&gt;On to the more interesting part.&lt;/p&gt;
&lt;p&gt;As promised, we'll be using Python in this example code, but feel free
to use one of your choosing.&lt;/p&gt;
&lt;p&gt;Initially, the problem seemed to require a small, home-grown
parser. However, it became clear that this was not necessary: Python
ships with it's own parser baked right in. We can just use it instead
of creating our own.&lt;/p&gt;
&lt;p&gt;The details of how the Python parser works are not relevant to our
discussion, but they may be the topic of a future post. What we need
to know is that an arbitrary string of text can be feed in to the
parser and a &lt;a href="https://en.wikipedia.org/wiki/Abstract_syntax_tree"&gt;abstract syntax
tree&lt;/a&gt; (herein AST)
will be emitted.&lt;/p&gt;
&lt;p&gt;Recall the first expression we considered:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;balance&amp;#39; &amp;gt; 1200
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Given the above as input, the Python parser emits the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;balance&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Gt&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt;
  &lt;span class="n"&gt;comparators&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For those of you who are Python programmers: notice we didn't even
have to pass in meaningful Python code; the semantics, in this
case. can be ignored. (What does string greater than integer even
mean?)&lt;/p&gt;
&lt;p&gt;For reference, the AST was created using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;balance&amp;#39; &amp;gt; 1200&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;eval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can argue over the use of &lt;code&gt;eval&lt;/code&gt; another time; for now, let's just
agree that it works.&lt;/p&gt;
&lt;p&gt;Given the AST for an expression, we need to convert it into something
that can be used with Elasticsearch. The AST is just a collection of
nested structures, so it can be traversed easily.&lt;/p&gt;
&lt;p&gt;Here is the guts of the code to take an expression generate the ELS
query equivalent:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;expr2els&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_expr2els&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;eval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;op2str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;And&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;and&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Or&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;or&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Gt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;gt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Lt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GtE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;gte&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LtE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lte&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_expr2els&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BoolOp&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;child&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_expr2els&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;op2str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bool&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;filter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="p"&gt;}}}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Compare&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;op2str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])]&lt;/span&gt;
        &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comparators&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
        &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
        &lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;range&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;}}}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;

&lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;balance&amp;#39; &amp;gt; 1200&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;expr2els&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This is what it does:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lines 1-3 contain code we've already seen, but with a minor
  alteration. It takes a string as an input, generates an AST from the
  expression, and then passes it to &lt;code&gt;_expr2els&lt;/code&gt; for further
  processing.&lt;/li&gt;
&lt;li&gt;Lines 5-7 define a map from an AST type to a string.&lt;/li&gt;
&lt;li&gt;Lines 10-17 handle the case where the AST node is a boolean
  expression (i.e. &lt;code&gt;ast.BoolOp&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Boolean Expressions&lt;/h2&gt;
&lt;p&gt;Boolean expressions require that we handle more than one child
expression. To see why this is necessary, consider the following
expression:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;balance&amp;#39; &amp;gt; 3500 and (&amp;#39;age&amp;#39; &amp;gt; 20 or &amp;#39;age&amp;#39; &amp;lt; 30)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The AST for the expression is:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;BoolOp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;And&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;Compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;balance&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
      &lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Gt&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt;
      &lt;span class="n"&gt;comparators&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3500&lt;/span&gt;&lt;span class="p"&gt;)]),&lt;/span&gt;
    &lt;span class="n"&gt;BoolOp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Or&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="n"&gt;Compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Gt&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt;
          &lt;span class="n"&gt;comparators&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)]),&lt;/span&gt;
        &lt;span class="n"&gt;Compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Lt&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt;
          &lt;span class="n"&gt;comparators&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)])]))])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Notice, on line 3, that &lt;code&gt;values&lt;/code&gt; has more than one item. (Otherwise
known as a list.) The reason for this is that the expression considers
two cases at this point. One where the following is true:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;balance&amp;#39; &amp;gt; 3500
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;And&lt;/strong&gt; another, where the following is true:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(&amp;#39;age&amp;#39; &amp;gt; 20 or &amp;#39;age&amp;#39; &amp;lt; 30)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is exactly what we would expect when we &lt;strong&gt;and&lt;/strong&gt; two expressions
together. The same is true when we &lt;strong&gt;or&lt;/strong&gt; two expressions, much like
we see on lines 8-17 in the AST expression.&lt;/p&gt;
&lt;p&gt;The remainder of the code,&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;op2str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bool&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;filter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Translates the type of the AST node to a string&amp;mdash;that's &lt;code&gt;'and'&lt;/code&gt; or
&lt;code&gt;'or'&lt;/code&gt; in our language&amp;mdash;and begins to build the ELS query. If we
re-read the AST dump above, we can see that it would generate the
following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;bool&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;filter&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;and&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="err"&gt;...&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Where &lt;code&gt;...&lt;/code&gt; would be the &lt;code&gt;child&lt;/code&gt; entries. Notice that &lt;code&gt;child&lt;/code&gt; could be
another boolean expression or a comparison expression (covered
bellow). Since because of the way we traverse the AST recursively,
&lt;code&gt;child&lt;/code&gt; can be a very complex sub-expression.&lt;/p&gt;
&lt;h2&gt;Comparison Operators&lt;/h2&gt;
&lt;p&gt;Once again, consider the following expression:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;balance&amp;#39; &amp;gt; 3500
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The next piece of code considers the case where the current node is a
comparison operator:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;op2str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])]&lt;/span&gt;
&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comparators&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;range&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;Line 1 maps the type of the operator to a string. In our case, this
  could be &lt;code&gt;ast.Gt&lt;/code&gt;, &lt;code&gt;ast.Lt&lt;/code&gt;, &lt;code&gt;ast.GtE&lt;/code&gt;, or &lt;code&gt;ast.LtE&lt;/code&gt; to &lt;code&gt;gt&lt;/code&gt;, &lt;code&gt;lt&lt;/code&gt;,
  &lt;code&gt;gte&lt;/code&gt;, and &lt;code&gt;lte&lt;/code&gt;, respectively.&lt;/li&gt;
&lt;li&gt;Line 2 extracts the value of the number being compared,
  i.e. &lt;code&gt;3500&lt;/code&gt;. while line 3 extracts the name of the variable (well,
  our syntax for variables, anyway), i.e. &lt;code&gt;'balance'&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Finally, line 4 pieces together the query, i.e.:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;range&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;balance&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;gt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3500&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Taken together, these small chunks of code can go a long way to
simplifying the process of writing ELS queries. It's not clear if this
is the best way, but it's a way that has worked well for me.&lt;/p&gt;
&lt;p&gt;The current implementation emits very verbose code. It may be possible
to optimize the resulting output, but this would require a second
stage. I didn't think it critical to this post to venture down that
route. I may visit how this might be done in a future post.&lt;/p&gt;
&lt;p&gt;If you have any questions or comments, please leave them bellow.&lt;/p&gt;</summary><category term="Elasticsearch"></category><category term="Python"></category></entry><entry><title>Windows Environment Variable Trick</title><link href="http://versionzero.org/blog/2008/08/29/windows-environment-variable-trick/index.html" rel="alternate"></link><published>2008-08-29T05:00:00-06:00</published><author><name>Ben Burnett</name></author><id>tag:versionzero.org,2008-08-29:blog/2008/08/29/windows-environment-variable-trick/index.html</id><summary type="html">&lt;p&gt;Although not explicitly supported, it is possible to make, let's call
them pseudo-arrays, in the environment with no fancy string parsing or
anything sloppy like that. It involves some clever uses of call
command to evaluate and extract values from the pseudo-arrays and well
positioned &lt;code&gt;%&lt;/code&gt; signs to demarcate which environment variables we want
evaluated and when.&lt;/p&gt;
&lt;p&gt;Lets look at a quick example to see the basic mechanism. Assignment would be
done as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set count=1
set var%count%=42
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are two method to extract the value, while at the command prompt
use the &lt;code&gt;%var%count%%&lt;/code&gt; form to extract the value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;call echo %var%count%%
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the other hand, while within a batch file use the following form to
extract the value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;call echo %%var%count%%%
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note the extra strafing &lt;code&gt;%&lt;/code&gt; signs. Both of the above expressions will
display the number 42, as expected; or maybe it's is surprising, it
all depends on your expectations and what you might consider
interesting and cool. Sadly, I do consider this cool; insofar as it
works on a straight out of the box Windows installation. The technique
may look a little hairy, but it's quite useful. The above will print
the contents of &lt;code&gt;var1&lt;/code&gt; (i.e. 42) as we explained.  We could also
replace the &lt;code&gt;echo&lt;/code&gt; command with a set if we wanted to set some other
variable to the value in &lt;code&gt;var1&lt;/code&gt;. Meaning the following is a valid
assignment at the command line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;call set x=%var%count%%
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Where:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo %x%
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Would print the number 42, as we would expect. We can even carry out
arithmetic operations on these pseudo-arrays' values. For instance,
the following would subtract 2 from the value of &lt;code&gt;varN&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;call set /a x=%var%N%%-2 &amp;gt;nul
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that here we need to redirect the output to the &lt;code&gt;nul&lt;/code&gt; port,
otherwise the result arithmetic operation would be printed to the
screen. Either way, this technique means that some rather advanced
operations can be done over a range of values, with some effort.&lt;/p&gt;</summary><category term="DOS"></category><category term="cmd"></category><category term="Environment Variables"></category><category term="Windows"></category></entry><entry><title>Installing Windows NT 4.0 Workstation Using Virtual PC</title><link href="http://versionzero.org/blog/2007/09/23/windows-nt-4.0-workstation-using-virtual-pc/index.html" rel="alternate"></link><published>2007-09-23T04:34:00-06:00</published><author><name>Ben Burnett</name></author><id>tag:versionzero.org,2007-09-23:blog/2007/09/23/windows-nt-4.0-workstation-using-virtual-pc/index.html</id><summary type="html">&lt;p&gt;I assume a lot about you’re background in these tutorials. They are
primarily for myself, because I have a tendency to forget things more
often than not, so don’t be too distressed and come calling on me if I
don’t hold your hand through the whole thing. (Sorry, it’s 12:04am,
and it’s been a long day.)&lt;/p&gt;
&lt;h1&gt;Requirements&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Windows NT Workstation CD-ROM or disk image&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create an ISO of your original Windows NT CD or get a copy from some
  someplace... Do this because otherwise it takes ages to install; it’s
  lightning fast with disk images as compared to real CD media.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a new Virtual Machine in Virtual PC with 64MB of RAM and 4GB
  of disk space, or change all that to your requirements.  Start the new
  Virtual Machine and have Virtual PC capture the WinNT.iso (or whatever
  you called it) as a CD-ROM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the new Virtual Machine has started, use your common since and
  format the drive using NTFS. After the format is complete, which
  will be quick, you can sit back and let the setup do its thing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the first boot, it will look like nothing is happening…
  forever. But it is actually doing something, so just be
  patient. Even though you selected NTFS as your file system, it first
  must be formatted as FAT and then converted. I’m sure there is some
  weird historical reason for this, but I don’t know it of hand. My
  best guess is that they had a very quick and easy way to format a
  FAT partition (so the actual install phase was fast), put some run
  once utilities on it, and then you boot for the first time, it blows
  the whole FAT partition away and puts an NTFS one in its place.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When prompted for the CD key, if you have it saved in a file, just
  copy it out of there (remove the ‘-’ and ‘OEM’, if it has it) and
  use Virtual PC to paste it into the Virtual Machine (fake the key
  strokes rock!). It’s all about being lazy. Unfortunately, unlike
  other OS installers, the NT one is not smart enough to skip from one
  edit control to the next, once the edit control is full. This means
  that instead of being able to just paste the whole thing, like you
  can for Windows 95, you must paste each part individually, and then
  TAB to the next edit control manually. It’s a small irritation, but
  if you have you speakers turned up, you’ll know you entered too many
  characters in on field, because Windows will beep repeatedly at
  you. (My ears leant that the hard way.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When asked about networking, just say you are on a Wired to the
  network and let NT detect the network adapter for you, by clicking
  on the search button. The TCP/IP Protocol is enabled by default. For
  most people this is sufficient, but you can also select NetBEUI for
  novelty’s sake.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The next step allows you to install new services, I added Simple
  TCP/IP Services and more importantly—for my network,
  anyway—Microsoft TCP/IP Printing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) During setup it asks to make a start-up disk, if you copy
  &lt;code&gt;D:\SUPPORT\HQTOOL\NTHQ&lt;/code&gt; and re-name it to startupNT.img, or
  something similar, you can capture the new disk image, and have the
  Windows NT setup create a new start-up disk for you. How ever so
  clever.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the installation is complete, release the floppy disk, because
  otherwise you’ll find yourself in recovery land. Also, I suggest
  disabling the auto detection of the floppy disk, as the seek noise
  on boot will drive you up the wall. (Maybe not the first time, but
  it will eventually get to you, I promise.) While you’re at it, you
  can also release the install media, since you won’t need it anymore.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It actually turns out that it’s just boots in general that take
  forever, just be patient.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Networking&lt;/h1&gt;
&lt;p&gt;Because of the way we installed Windows NT, the networking may not be
configured correctly. To fix this open the Control Panel and double
click on the Network icon. Once there, add click on Add… and double
click on Protocol in the component list. From the Manufacturers list,
select Microsoft and them, from the Network Protocols double click on
TCP/IP. Finally, click OK and allow Windows to go about it’s rebooting
way. Reboots always seem to make Windows happy. If your computer is
ever frustrated, just reboot it, it’ll make it smile.&lt;/p&gt;
&lt;h1&gt;Service Pack&lt;/h1&gt;
&lt;p&gt;Once you have the networking configured properly, it’s time to update
Windows (as all good Windows users do, right?). I found, to my
surprise, that the Windows 95 Service Pack was still available from
the Microsoft web-site. Man, I’d hate to be the person doing the
support for that.&lt;/p&gt;
&lt;p&gt;You can get SP6a from
&lt;a href="http://support.microsoft.com/kb/152734"&gt;here&lt;/a&gt;. Be warned, however,
that you will have to do this on your host machine and transfer the
files over the network, as the version of IE that ships with NT (on my
old version, anyway— packing a full SP1, oh yeah!) won’t even open
www.google.com.&lt;/p&gt;
&lt;h1&gt;Notes&lt;/h1&gt;
&lt;p&gt;Get the following packages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cintek.com/download/ie5.htm"&gt;Internet Explorer 5.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cintek.com/download/ie5.htm"&gt;Microsoft .NET Framework 1.1 Redistributable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, when you tell Virtual PC to Install or Update Virtual Machine
Additions, in the words of the venerable comedian Douglas Addams,
"Don’t Panic!", because it will just give you a weird error (the
kernel is missing a handy function to tell Virtual PC if a debugger is
running, if that means anything to you, great! If not, don’t worry
about, it’s not important anyway). But this error really isn’t an
error; you can ignore it and simple Explore the CD for the setup
program… Sadly, it turns out only the DOS applications actually work
on a Window 95 base install (and they do not play well with Windows,
so you have to exit to the command line and run FSHARE.EXE to get
Folder Sharing to work— and even then, it’s only in DOS that you can
access that drive. If you try to run Windows once it has been loaded,
Windows goes all wonky— try it, if you don’t believe me.) What really
strikes me about this is that even the OS/2 additions work—and who
even uses that OS anymore?! (Says the man installing Windows 95)—so
why doesn’t it work on a stock Windows 95 install?&lt;/p&gt;</summary><category term="Windows"></category><category term="Virtual PC"></category><category term="Virtual Machines"></category></entry><entry><title>Doskey Macros</title><link href="http://versionzero.org/blog/2002/08/20/doskey-macros/index.html" rel="alternate"></link><published>2002-08-20T05:00:00-06:00</published><author><name>Ben Burnett</name></author><id>tag:versionzero.org,2002-08-20:blog/2002/08/20/doskey-macros/index.html</id><summary type="html">&lt;p&gt;Doskey macros are a wonderful thing, even today with the GUI goodness
Windows offers, there is still many a reason to drop down to the
command line. Now, most Linux and UNIX folks will laugh at the
arguably abysmal tool set given by the good old DOS prompt, but it can
be made just a little more interesting if you start using doskey in
conjunction with a set of batch files.&lt;/p&gt;
&lt;p&gt;Below is a very simple template doskey macro/batch file which will
first execute as a batch file, and then use itself as a doskey macro
file. Hopefully it will get you started down a more efficient command
line route. Or you might just find it a clever, but useless mess.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;;= @echo off
;= rem Call DOSKEY and use this file as the macrofile
;= %SystemRoot%\system32\doskey /listsize=1000 /macrofile=%0%
;= rem In batch mode, jump to the end of the file
;= goto end
;= rem ******************************************************************
;= rem *   Filename: aliases.bat
;= rem *    Version: 1.0
;= rem *     Author: Ben Burnett &amp;lt;me@cs.wisc.edu&amp;gt;
;= rem *    Purpose: Simple, but useful aliases; this can be done by
;= rem *             other means--of course--but this is dead simple and
;= rem *             works on EVERY Windows machine on the planet.
;= rem *    History:
;= rem * 22/01/2002: File Created (Syncrude Canada).
;= rem * 01/05/2007: Updated author&amp;#39;s address, added new macros, a
;= rem *             history and some new helpful comments.
;= rem * 19/06/2007: Added Notepad, Explorer and Emacs macros.
;= rem * 20/06/2007: Fixed doskey macrofile= path problem: it is now not
;= rem *             a relative path, so it can be called from anywhere.
;= rem ******************************************************************

;= Doskey aliases
h=doskey /history

;= File listing enhancements
ls=dir /x $*
l=dir /x $*
ll=dir /w $*
la=dir /x /a $*

;= Directory navigation
up=cd ..
pd=pushd

;= Copy and move macros
cp=copy
mv=move

;= Delete macros
rm=del /p $*
rmf=del /q $*
rmtmp=del /q *~ *# 2&amp;gt;nul

;= Fast access to Notepad
n=notepad $*

;= Fast access to Explorer
c=explorer .

;= :end
;= rem ******************************************************************
;= rem * EOF - Don&amp;#39;t remove the following line.  It clears out the &amp;#39;;&amp;#39;
;= rem * macro. Were using it because there is no support for comments
;= rem * in a DOSKEY macro file.
;= rem ******************************************************************
;=
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It abuses the fact that the command prompt in Windows will silently
eat the &lt;code&gt;;=&lt;/code&gt; prefix, while doskey will treat it as a macro being
re-defined over and over again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: Honourable mention on
  &lt;a href="http://stackoverflow.com/questions/4186427/how-do-you-write-comments-in-doskey-macro-files"&gt;StackOverflow&lt;/a&gt;&lt;/p&gt;</summary><category term="DOS"></category><category term="cmd"></category><category term="Windows"></category></entry></feed>